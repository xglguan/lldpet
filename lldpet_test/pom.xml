<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.lldpet</groupId>
  <artifactId>lldpet_test</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>lldpet_test</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.version>4.2.8.RELEASE</spring.version>
    <slf4j.version>1.7.7</slf4j.version>
  </properties>
  <dependencies>
	<dependency>
		<groupId>com.lldpet</groupId>
	    <artifactId>lldpet_cms_env</artifactId>
	    <version>0.0.1-SNAPSHOT</version>
	</dependency>
	<dependency>
		<groupId>com.lldpet</groupId>
	    <artifactId>lldpet_cms_account_api</artifactId>
	    <version>0.0.1-SNAPSHOT</version>
	</dependency>
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.12</version>
	</dependency>
	<!-- Spring -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- spring end -->
	<!-- log -->
	<dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
     </dependency>
     <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <version>1.1.3</version>
     </dependency>
     <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>log4j-over-slf4j</artifactId>
         <version>${slf4j.version}</version>
     </dependency>
	<!-- zkclient  -->
	<dependency>
	  <groupId>com.github.sgroschupf</groupId>
	  <artifactId>zkclient</artifactId>
	  <version>0.1</version>
	</dependency>
	<!--  zookeeper -->
	<dependency>
	  <groupId>org.apache.zookeeper</groupId>
	  <artifactId>zookeeper</artifactId>
	  <version>3.3.6</version>
	</dependency>
	<!-- dubbo 服务注册方式 start -->
	<dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>dubbo</artifactId>
		<version>2.5.3</version>
		<exclusions>
			<exclusion>
				<groupId>org.springframework</groupId>
				<artifactId>spring</artifactId>
			</exclusion>
			<exclusion>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
            </exclusion>
		</exclusions>
	</dependency>
	<!-- mybatis -->
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>3.2.1</version>
	</dependency>
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis-spring</artifactId>
		<version>1.2.0</version>
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.26</version>
	</dependency>
	<dependency>
		<groupId>org.jboss.netty</groupId>
		<artifactId>netty</artifactId>
		<version>3.2.7.Final</version>
	</dependency>
	<dependency>
		<groupId>org.javassist</groupId>
		<artifactId>javassist</artifactId>
		<version>3.15.0-GA</version>
	</dependency>
  </dependencies>
  <build>  
    <finalName>dubbo-lldpet</finalName>
    <resources>
    	<resource>
            <targetPath>${project.build.directory}/classes</targetPath>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
                <include>**/*.xml</include>
                <include>**/*.properties</include>
            </includes>
        </resource>
        <!-- 结合com.alibaba.dubbo.container.Main，需要重点掌握-->
        <resource>
            <targetPath>${project.build.directory}/classes/META-INF/spring</targetPath>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <includes>
                <include>applicationContext.xml</include>
            </includes>
        </resource>
    </resources>
    <plugins>
    	<!-- 编译插件 -->
        <plugin>  
            <groupId>org.apache.maven.plugins</groupId>  
            <artifactId>maven-compiler-plugin</artifactId>  
            <version>2.1</version>  
            <configuration>  
                <source>1.7</source>  
                <target>1.7</target>  
                <encoding>UTF-8</encoding>  
                <failOnError>false</failOnError>  
            </configuration>  
        </plugin>
        <!-- 资源文件 拷贝 -->
        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-resources-plugin</artifactId>
           <version>2.4.3</version>
           <executions>
               <execution>
                   <id>copy-assembly</id>
                   <phase>validate</phase>
                   <configuration>
                       <outputDirectory>${project.build.directory}/classes</outputDirectory>
                       <resources>
                           <resource>
                               <directory>src/main/assembly/conf</directory>
                           </resource>
                       </resources>
                   </configuration>
                   <goals>
                       <goal>copy-resources</goal>
                   </goals>
               </execution>
           </executions>
        </plugin>
        <!-- 打jar包时候过滤掉dubbo.properties文件，使用最后发布包里conf下的属性文件 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.3.2</version>
            <configuration>
                <excludes>
                    <excludes>**/conf/**</excludes>
                    <excludes>**/assembly.xml</excludes>
                </excludes>
            </configuration>
        </plugin>
        <!-- 发布插件 -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.4</version>
            <configuration>
                <skip>true</skip>
            </configuration>
        </plugin>
        <plugin>  
		    <groupId>org.codehaus.mojo</groupId>  
		    <artifactId>exec-maven-plugin</artifactId>  
		    <version>1.2.1</version>  
		    <executions>  
		        <execution>  
		            <goals>  
		                <goal>java</goal>  
		            </goals>  
		        </execution>  
		    </executions>  
		    <configuration>  
		        <mainClass>com.alibaba.dubbo.container.Main</mainClass>  
		    </configuration>  
		</plugin>
		<plugin>  
		    <artifactId>maven-assembly-plugin</artifactId>  
		    <executions>  <!--执行器 mvn assembly:assembly-->  
		        <execution>  
		            <id>make-assembly</id><!--名字任意 -->    
		        <phase>package</phase><!-- 绑定到package生命周期阶段上 -->    
		        <goals>    
		           <goal>single</goal><!-- 只运行一次 -->    
		        </goals>    
		            <configuration>  
	                     <descriptors> <!--描述文件路径-->  
	                          <descriptor>src/main/assembly/assembly.xml</descriptor>  
	                    </descriptors>  
		            </configuration>  
		        </execution>  
		    </executions>  
		 </plugin>  
    </plugins>  
  </build>
  <!-- 文件 -->
  <profiles>
  	<profile>
		<id>local</id>
		<activation>
			<activeByDefault>true</activeByDefault>
		</activation>
		<properties>
			<project.compVersion>0.0.1-SNAPSHOT</project.compVersion>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
			<!-- 数据库连接地址和数据库名 -->
			<jdbc.url>
				jdbc:mysql://127.0.0.1:3306/lldpet
			</jdbc.url>
			<!-- 数据库访问帐号 -->
			<jdbc.username>root</jdbc.username>
			<!-- 数据库访问密码 -->
			<jdbc.password>123456</jdbc.password>
			<!-- 日志级别，一般由大到小分为 debug info warn error 四个级别，越大日志越详细 -->
			<log4j.level>debug</log4j.level>
			<!--日志存储路径，多个项目可以用同一个路径，在该路径下每个项目会自动创建以项目名称命名的子文件夹 -->
			<log4j.path>./var/log</log4j.path>
			<!--dubbo注册中心的地址 -->
			<dubbo.application.name>${project.artifactId}provider</dubbo.application.name>
			<dubbo.protocol.name>dubbo</dubbo.protocol.name>
			<dubbo.protocol.host>127.0.0.1</dubbo.protocol.host>
			<dubbo.registry.address>127.0.0.1:2181</dubbo.registry.address>
			<dubbo.service.group>local</dubbo.service.group>
		</properties>
	</profile>
	<profile>
		<id>test</id>
		<activation>
			<activeByDefault>false</activeByDefault>
		</activation>
		<properties>
			<project.compVersion>0.0.1-SNAPSHOT</project.compVersion>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
			<!-- 数据库连接地址和数据库名 -->
			<jdbc.url>
				jdbc:mysql://127.0.0.1:3306/lldpet
			</jdbc.url>
			<!-- 数据库访问帐号 -->
			<jdbc.username>root</jdbc.username>
			<!-- 数据库访问密码 -->
			<jdbc.password>123456</jdbc.password>
			<!-- 日志级别，一般由大到小分为 debug info warn error 四个级别，越大日志越详细 -->
			<log4j.level>debug</log4j.level>
			<!--日志存储路径，多个项目可以用同一个路径，在该路径下每个项目会自动创建以项目名称命名的子文件夹 -->
			<log4j.path>./var/log</log4j.path>
			<!--dubbo注册中心的地址 -->
			<dubbo.application.name>${project.artifactId}provider</dubbo.application.name>
			<dubbo.protocol.name>dubbo</dubbo.protocol.name>
			<dubbo.protocol.host>127.0.0.1</dubbo.protocol.host>
			<dubbo.registry.address>127.0.0.1:2181</dubbo.registry.address>
			<dubbo.service.group>local</dubbo.service.group>
		</properties>
	</profile>
	<profile>
		<id>product</id>
		<activation>
			<activeByDefault>false</activeByDefault>
		</activation>
		<properties>
			<project.compVersion>0.0.1-SNAPSHOT</project.compVersion>
			<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
			<!-- 数据库连接地址和数据库名 -->
			<jdbc.url>
				jdbc:mysql://127.0.0.1:3306/lldpet
			</jdbc.url>
			<!-- 数据库访问帐号 -->
			<jdbc.username>root</jdbc.username>
			<!-- 数据库访问密码 -->
			<jdbc.password>123456</jdbc.password>
			<!-- 日志级别，一般由大到小分为 debug info warn error 四个级别，越大日志越详细 -->
			<log4j.level>debug</log4j.level>
			<!--日志存储路径，多个项目可以用同一个路径，在该路径下每个项目会自动创建以项目名称命名的子文件夹 -->
			<log4j.path>./var/log</log4j.path>
			<!--dubbo注册中心的地址 -->
			<dubbo.application.name>${project.artifactId}provider</dubbo.application.name>
			<dubbo.protocol.name>dubbo</dubbo.protocol.name>
			<dubbo.protocol.host>127.0.0.1</dubbo.protocol.host>
			<dubbo.registry.address>127.0.0.1:2181</dubbo.registry.address>
			<dubbo.service.group>local</dubbo.service.group>
		</properties>
	</profile>
  </profiles>
</project>